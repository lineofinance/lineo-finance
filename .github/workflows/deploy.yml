name: Deploy to AWS

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:  # Allow manual triggering

env:
  AWS_REGION: eu-central-1
  NODE_VERSION: '18'

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build site
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0
          terraform_wrapper: false

      - name: Get deployment targets from Terraform
        id: terraform
        working-directory: ./terraform
        run: |
          terraform init -backend=true -input=false
          echo "bucket_name=$(terraform output -raw s3_bucket_name)" >> $GITHUB_OUTPUT
          echo "distribution_id=$(terraform output -raw cloudfront_distribution_id)" >> $GITHUB_OUTPUT
          echo "website_url=$(terraform output -raw website_url)" >> $GITHUB_OUTPUT

      - name: Deploy to S3
        run: |
          # Upload HTML files with no-cache
          aws s3 sync dist/ s3://${{ steps.terraform.outputs.bucket_name }}/ \
            --exclude "*" \
            --include "*.html" \
            --include "*/index.html" \
            --cache-control "no-cache, no-store, must-revalidate" \
            --content-type "text/html; charset=utf-8" \
            --delete
          
          # Upload CSS files with 1 day cache
          aws s3 sync dist/ s3://${{ steps.terraform.outputs.bucket_name }}/ \
            --exclude "*" \
            --include "*.css" \
            --cache-control "public, max-age=86400" \
            --content-type "text/css; charset=utf-8"
          
          # Upload JS files with 1 day cache
          aws s3 sync dist/ s3://${{ steps.terraform.outputs.bucket_name }}/ \
            --exclude "*" \
            --include "*.js" \
            --cache-control "public, max-age=86400" \
            --content-type "application/javascript; charset=utf-8"
          
          # Upload images with 30 day cache
          aws s3 sync dist/ s3://${{ steps.terraform.outputs.bucket_name }}/ \
            --exclude "*" \
            --include "*.jpg" --include "*.jpeg" --include "*.png" \
            --include "*.gif" --include "*.svg" --include "*.webp" \
            --cache-control "public, max-age=2592000"
          
          # Upload fonts with 30 day cache
          aws s3 sync dist/ s3://${{ steps.terraform.outputs.bucket_name }}/ \
            --exclude "*" \
            --include "*.woff" --include "*.woff2" \
            --include "*.ttf" --include "*.eot" \
            --cache-control "public, max-age=2592000"
          
          # Upload remaining files
          aws s3 sync dist/ s3://${{ steps.terraform.outputs.bucket_name }}/ \
            --exclude "*.html" --exclude "*.css" --exclude "*.js" \
            --exclude "*.jpg" --exclude "*.jpeg" --exclude "*.png" \
            --exclude "*.gif" --exclude "*.svg" --exclude "*.webp" \
            --exclude "*.woff" --exclude "*.woff2" --exclude "*.ttf" \
            --exclude "*.eot" --exclude ".git/*" --exclude "node_modules/*" \
            --cache-control "public, max-age=3600" \
            --delete

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ steps.terraform.outputs.distribution_id }} \
            --paths "/*"

      - name: Deployment summary
        run: |
          echo "‚úÖ Deployment successful!"
          echo "üåê Website URL: ${{ steps.terraform.outputs.website_url }}"
          echo "ü™£ S3 Bucket: ${{ steps.terraform.outputs.bucket_name }}"
          echo "‚òÅÔ∏è CloudFront ID: ${{ steps.terraform.outputs.distribution_id }}"